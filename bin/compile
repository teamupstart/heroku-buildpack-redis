#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

# Configure environment
set -e            # fail fast
set -o pipefail   # don't ignore exit codes when piping output
# set -x            # enable debugging

# Clean up leaking environment
unset GIT_DIR

# Directories
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3
BUILDPACK_DIR="$(dirname $(dirname $0))"

echo "-----> Moving the configuration generation script into app/bin"
mkdir -p $BUILD_DIR/bin
if [ "$STACK" == "heroku-18" ]; then
  cp "$BUILDPACK_DIR/bin/stunnel-conf.sh" $BUILD_DIR/bin/stunnel-conf.sh
else
  cp "$BUILDPACK_DIR/bin/legacy-stunnel-conf.sh" $BUILD_DIR/bin/stunnel-conf.sh
fi
chmod +x $BUILD_DIR/bin/stunnel-conf.sh

echo "-----> Moving the start-stunnel script into app/bin"
mkdir -p $BUILD_DIR/bin
cp "$BUILDPACK_DIR/bin/start-stunnel" $BUILD_DIR/bin/
chmod +x $BUILD_DIR/bin/start-stunnel

VENDORED_STUNNEL="vendor/stunnel"

# If we want to use the same client certificates as pgbouncer
if [[ "$STUNNEL_USE_PGBOUNCER_SSL" == "yes" || "$STUNNEL_USE_PGBOUNCER_SSL" == "true" ]]; then
  SSLINI=$BUILD_DIR/$VENDORED_STUNNEL/ssl.ini
  SSLDIR=$BUILD_DIR/$VENDORED_STUNNEL/ssl
  if [ -f $ENV_DIR/PGBOUNCER_SERVER_CAFILE ]; then
      echo "-----> SSL: Moving the server CA file into app/vendor/stunnel/ssl"
      mkdir -p $SSLDIR
      cp $ENV_DIR/PGBOUNCER_SERVER_CAFILE $SSLDIR/ca.crt
      echo "CAfile = /app/$VENDORED_STUNNEL/ssl/ca.crt" >> $SSLINI
      chmod 600 $SSLDIR/ca.crt
  fi
  if [ -f $ENV_DIR/PGBOUNCER_SERVER_CERTFILE ]; then
      echo "-----> SSL: Moving the server certificate file into app/vendor/stunnel/ssl"
      mkdir -p $SSLDIR
      cp $ENV_DIR/PGBOUNCER_SERVER_CERTFILE $SSLDIR/client.crt
      echo "cert = /app/$VENDORED_STUNNEL/ssl/client.crt" >> $SSLINI
      chmod 600 $SSLDIR/client.crt
  fi
  if [ -f $ENV_DIR/PGBOUNCER_SERVER_KEYFILE ]; then
      echo "-----> SSL: Moving the server certificate key file into app/vendor/stunnel/ssl"
      mkdir -p $SSLDIR
      cp $ENV_DIR/PGBOUNCER_SERVER_KEYFILE $SSLDIR/client.key
      echo "key = /app/$VENDORED_STUNNEL/ssl/client.key" >> $SSLINI
      chmod 600 $SSLDIR/client.key
  fi
fi

echo "-----> stunnel done"
